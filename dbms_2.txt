

CREATE TABLE Works-on  
(
Emp_no INTEGER,
Proj_code CHAR(10),
PRIMARY KEY(Emp_no, Proj_code),
FOREIGN KEY (Emp_no) REFERENCES Employee ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (Proj_code) REFERENCES Project ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Salary-hist 
(
Salary_level INTEGER,
Job_code CHAR(10) not null,
Emp_no INTEGER,
PRIMARY KEY(Emp_no, Salary_level),
FOREIGN KEY (Emp_no) REFERENCES Employee ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (Job_code) REFERENCES Job ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (Salary_level) REFERENCES Salary ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Employee
(
Emp_no INTEGER,
Emp_name CHAR(30),
Room_no CHAR(10),
Manages CHAR(10),
Dept_head CHAR(20),
Dept_no INTEGER,
PRIMARY KEY (Emp_no),
FOREIGN KEY (Dept_no) REFERENCES Department ON DELETE SET DEFAULT ON UPDATE CASCADE,
FOREIGN KEY (Manages) REFERENCES Employee ON DELETE SET NULL ON UPDATE CASCADE,
FOREIGN KEY (Dept_head) REFERENCES Department ON DELETE SET NULL ON UPDATE CASCADE,
);

CREATE TABLE Salary   
(
Salary_level INTEGER,
Mon_Salary REAL,
PRIMARY KEY (Salary_level)
);

CREATE TABLE Job               
(
Job_code CHAR(10),
Job_title CHAR(30),
PRIMARY KEY (Job_code)
);


CREATE TABLE Project  
(
Proj_code CHAR(10),
Proj_name CHAR(30),
Start_data DATE,
End_data DATE,
Emp_no INTEGER,
PRIMARY KEY (Proj_code),
FOREIGN KEY (Emp_no) REFERENCES Employee ON DELETE SET DEFAULT ON UPDATE CASCADE
);


CREATE TABLE Department   
(
Dept_no  INTEGER,
Dept_name CHAR(30),
Dept_head CHAR(20) UNIQUE,
PRIMARY KEY (Dept_no),
);





//A FOREIGN KEY constraint does not have to be linked only to a PRIMARY KEY constraint in another table; it can also be defined to reference the columns of a UNIQUE constraint in another table. So in your case if you make AnotherID unique, it will be allowed.


	
