Question 1: What is the type of variable np?
np is a pointer of type proc.

Question 2: What does np represent? In other words, what do the letters 'n' and 'p' stand for?
00000000000000000000000000000000


Question 3: What does the variable proc represent? Hint: You can find its type by looking at its declaration in kernel/proc.h.

Currently running process***********

If you can't answer these questions definitively right now, that's OK, we're going to step through the code. In GDB, type 'n' to execute the line 134. Then type:

(gdb) print np
GDB outputs the type of the variable and the value. The type is your answer to question 1 above. The value is actually an address. Since np is a pointer, it stores the address of an object that it is pointing to. This leads to our next question...

Question 4: What is the address of the object that np is pointing to?
0x104e4a


Now have a look at the object itself by typing:

(gdb) print *np
We'll actually want to keep an eye on this object because its attributes will gradually be initialized throughout the fork syscall. We can tell GDB to display this object automatically by typing:

(gdb) display *np
Then type 'n' to execute the next line of code and notice that GDB automatically displays the np object again. Look at the line of code that just executed (line 138), then look at which attributes of the np object have changed as a result.

NOTHING HAS CHANGED

Continue stepping through the fork function watching as the values within the np object continue to change. Make sure you stop before the function returns on line 159.

Question 5: What is the name of the child process that was created? Note: Although you may not believe your own answer at first, you can trust that GDB is not lying to you. The child process will later be renamed and repurposed.

sh

Now take a look at the value of pid, which the fork syscall is about to return, by typing:

(gdb) print pid
Question 6: What is the value of pid?
3


Question 7: In which process, the parent or the child, will this value be returned?

parent